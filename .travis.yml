language: generic
sudo: required
services:
  - docker

before_install:
  - docker build -t lukasjvdm/react-test -f ./client/Dockerfile.dev ./client
  #-docker build myotherproject     -> if we want to add more tests for server/worker

script:
  - docker run -e CI=true lukasjvdm/react-test npm test #the tag ensures that the test suite actually exits after completion with its appropriate code
  #-docker run myother project runmytests

after_success:
  - docker build -t lukasjvdm/multi-client ./client
  - docker build -t lukasjvdm/multi-nginx ./nginx
  - docker build -t lukasjvdm/multi-server ./server
  - docker build -t lukasjvdm/multi-worker ./worker
  #log in to docker CLI with a single command
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  #echo -> retrieve password from env variable and emit over stdin as input to next command
  # -u "$DOCKER_ID" -> add username with -u flag
  #--password-stdin -> recieve password from stdin

  #take images and push them to docker hub
  - docker push lukasjvdm/multi-client
  - docker push lukasjvdm/multi-nginx
  - docker push lukasjvdm/multi-server
  - docker push lukasjvdm/multi-worker

deploy:
  provider: elasticbeanstalk
  region: eu-west-2
  app: multi-docker
  env: Multidocker-env
  bucket_name: elasticbeanstalk-eu-west-2-501640355287
  bucket_path: docker-multi
  on:
    branch: main
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
